snippet main
	public static void main (String [] args)
	{
		${1:/* code */}
	}
snippet pu
	public
snippet po
	protected
snippet pr
	private
snippet st
	static
snippet fi
	final
snippet ab
	abstract
snippet re
	return
snippet br
	break;
snippet de
	default:
		${1}
snippet ca
	catch(${1:Exception} ${2:e}) ${3}
snippet th
	throw 
snippet sy
	synchronized
snippet im
	import
snippet j.u
	java.util
snippet j.i
	java.io.
snippet j.b
	java.beans.
snippet j.n
	java.net.
snippet j.m
	java.math.
snippet if
	if (${1}) ${2}
snippet el
	else 
snippet elif
	else if (${1}) ${2}
snippet wh
	while (${1}) ${2}
snippet for
	for (${1} in ${2}) ${4}
snippet fore
	for (${1} : ${2}) ${3}
snippet sw
	switch (${1}) ${2}
snippet cs
	case ${1}:
		${2}
	${3}
snippet tc
	public class ${1:`Filename()`} extends ${2:TestCase}
snippet t
	public void test${1:Name}() throws Exception ${2}
snippet cl
	class ${1:`Filename("", "untitled")`} ${2}
snippet in
	interface ${1:`Filename("", "untitled")`} ${2:extends Parent}${3}
snippet m
	${1:void} ${2:method}(${3}) ${4:throws }${5}
snippet v
	${1:String} ${2:var}${3: = null}${4};${5}
snippet co
	static public final ${1:String} ${2:var} = ${3};${4}
snippet cos
	static public final String ${1:var} = "${2}";${3}
snippet as
	assert ${1:test} : "${2:Failure message}";${3}
snippet as400
	Sql sql = Sql.newInstance("jdbc:as400://${1:as400dev;naming=system}", "${2:sqldev}", "${3:gbe1pc}", "com.ibm.as400.access.AS400JDBCDriver")
snippet implog
	import java.util.logging.*
snippet logger
	Logger log = Logger.getLogger("${1:ca.qc.barreau.logger}")
snippet logi
	log.info(${1})
snippet logf
	log.fine(${1})
snippet logff
	log.finer(${1})
snippet logfff
	log.finest(${1})
snippet logs
	log.severe(${1})
snippet logen
	log.entering("${1:`Filename()`}","${2:main}")
snippet logex
	log.exiting("${1:`Filename()`}","${2:main}")
snippet prop
	def props = new Properties()
	def stream = this.class.classLoader.getResourceAsStream ("META-INF/${1:commun}/${2:commun}.properties")
	props.load(stream)
